package com.reintroducing.data.base{	import flash.utils.getQualifiedClassName;	/**	 * Works in conjunction with a Collection to iterate through its contents.	 * 	 * @author Adobe [http://www.adobe.com]	 * @author Ported to AS3 by Matt Przybylski [http://www.reintroducing.com]	 * @version 1.0	 */	public class Iterator 	{//- PRIVATE & PROTECTED VARIABLES -------------------------------------------------------------------------		protected var _collection:Collection;		protected var _cursor:int;		//- PUBLIC & INTERNAL VARIABLES ---------------------------------------------------------------------------						//- CONSTRUCTOR	-------------------------------------------------------------------------------------------			/**		 * Initializes the Iterator and maintain a link to its Collection.		 * 		 * @param $coll Collection to which this Iterator belongs.		 */		public function Iterator($coll:Collection)		{			_collection = $coll;			_cursor = 0;		}//- PRIVATE & PROTECTED METHODS ---------------------------------------------------------------------------						//- PUBLIC & INTERNAL METHODS -----------------------------------------------------------------------------			/**		 * Returns true if the iteration has more items.		 * 		 * @return Boolean true if iteration has more items.		 */		public function hasNext():Boolean 		{			return (_cursor < _collection.getLength());		}				/**		 * Return the next item in the iteration and increment the cursor. Returns null if the 		 * iteration has no more items.		 * 		 * @return * the next item in the Iteration.		 */		public function next():* 		{			return (_collection.getItemAt(_cursor++));		}		//- EVENT HANDLERS ----------------------------------------------------------------------------------------				//- GETTERS & SETTERS -------------------------------------------------------------------------------------				//- HELPERS -----------------------------------------------------------------------------------------------			/**		 * @private		 */		public function toString():String		{			return getQualifiedClassName(this);		}	//- END CLASS ---------------------------------------------------------------------------------------------	}}