package com.reintroducing.events{	import flash.events.Event;		/**	 * Event dispatched by the MouseIdleMonitor.	 * 	 * @author Matt Przybylski [http://www.reintroducing.com]	 * @version 1.0	 */	public class MouseIdleMonitorEvent extends Event	{//- PRIVATE & PROTECTED VARIABLES -------------------------------------------------------------------------				//- PUBLIC & INTERNAL VARIABLES ---------------------------------------------------------------------------				// event constants		public static const MOUSE_IDLE:String = "mouseIdle";		public static const MOUSE_ACTIVE:String = "mouseActive";				public var idleTime:Number;		//- CONSTRUCTOR	-------------------------------------------------------------------------------------------			public function MouseIdleMonitorEvent($type:String, $idleTime:Number = 0, $bubbles:Boolean = false, $cancelable:Boolean = false)		{			super($type, $bubbles, $cancelable);						this.idleTime = $idleTime;		}		//- PRIVATE & PROTECTED METHODS ---------------------------------------------------------------------------						//- PUBLIC & INTERNAL METHODS -----------------------------------------------------------------------------				//- EVENT HANDLERS ----------------------------------------------------------------------------------------				//- GETTERS & SETTERS -------------------------------------------------------------------------------------				//- HELPERS -----------------------------------------------------------------------------------------------			/**		 * @private		 */		public override function clone():Event		{			return new MouseIdleMonitorEvent(type, idleTime, bubbles, cancelable);		}				/**		 * @private		 */		public override function toString():String		{			return formatToString("MouseIdleMonitorEvent", "idleTime", "type", "bubbles", "cancelable");		}	//- END CLASS ---------------------------------------------------------------------------------------------	}}