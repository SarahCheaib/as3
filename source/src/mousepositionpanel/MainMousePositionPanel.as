package mousepositionpanel{	import flash.events.MouseEvent;
	import com.reintroducing.ui.mousepositionpanel.MousePositionPanel;
	import com.reintroducing.data.mousepositionpanel.MousePositionPanelData;	import flash.display.MovieClip;	import flash.utils.getQualifiedClassName;	/** 	 * @author Matt Przybylski [http://www.reintroducing.com] 	 * @version 1.0 	 */	public class MainMousePositionPanel extends MovieClip	{//- PRIVATE & PROTECTED VARIABLES -------------------------------------------------------------------------		private var _mpp:MousePositionPanel;		//- PUBLIC & INTERNAL VARIABLES ---------------------------------------------------------------------------				public var holder:MovieClip;		//- CONSTRUCTOR	-------------------------------------------------------------------------------------------			public function MainMousePositionPanel()		{			super();						init();		}		//- PRIVATE & PROTECTED METHODS ---------------------------------------------------------------------------				/**		 *		 */		private function init():void		{			var mppData:MousePositionPanelData = new MousePositionPanelData();			mppData.itemHolder = holder;			mppData.content = holder.content;			mppData.masker = holder.masker;			mppData.axis = MousePositionPanelData.AXIS_X;			mppData.moveType = MousePositionPanelData.TYPE_AGAINST_MOUSE;			mppData.speed = 10;						_mpp = new MousePositionPanel(mppData);						holder.addEventListener(MouseEvent.ROLL_OVER, handleStartPanel, false, 0, true);			holder.addEventListener(MouseEvent.ROLL_OUT, handleStopPanel, false, 0, true);		}//- PUBLIC & INTERNAL METHODS -----------------------------------------------------------------------------				//- EVENT HANDLERS ----------------------------------------------------------------------------------------			/**		 *		 */		private function handleStartPanel($evt:MouseEvent):void		{			trace("MainMousePositionPanel.handleStartPanel(",[$evt],")");			_mpp.startPanel();		}				/**		 *		 */		private function handleStopPanel($evt:MouseEvent):void		{			trace("MainMousePositionPanel.handleStopPanel(",[$evt],")");			_mpp.stopPanel();		}	//- GETTERS & SETTERS -------------------------------------------------------------------------------------				//- HELPERS -----------------------------------------------------------------------------------------------			override public function toString():String		{			return getQualifiedClassName(this);		}	//- END CLASS ---------------------------------------------------------------------------------------------	}}