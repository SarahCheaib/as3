package textmanager{	import com.greensock.events.LoaderEvent;	import com.greensock.loading.CSSLoader;	import com.greensock.loading.LoaderMax;	import com.reintroducing.data.text.TextManagerConstants;	import com.reintroducing.data.text.config.InputTextConfig;	import com.reintroducing.data.text.lang.Language;	import com.reintroducing.text.TextManager;	import com.reintroducing.utils.FontUtils;	import flash.display.MovieClip;	import flash.text.StyleSheet;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.utils.getQualifiedClassName;	/**	 * @author Matt Przybylski [http://www.reintroducing.com] 	 * @version 1.0 	 */	public class MainTextManager extends MovieClip	{//- PRIVATE & PROTECTED VARIABLES -------------------------------------------------------------------------		private var _tm:TextManager;		//- PUBLIC & INTERNAL VARIABLES ---------------------------------------------------------------------------						//- CONSTRUCTOR	-------------------------------------------------------------------------------------------			public function MainTextManager():void		{			super();						this.init();		}		//- PRIVATE & PROTECTED METHODS ---------------------------------------------------------------------------				/**		 *		 */		private function init():void		{			FontUtils.outputFonts();						var loader:CSSLoader = new CSSLoader("../css/english-styles.css", {name: "textStyles", onComplete: handleCSSLoaded});			loader.load();		}				/**		 *		 */		private function createText():void		{			var header:TextField = _tm.createTextField(TextManagerConstants.TYPE_STATIC, "The Header", "header");						var body:TextField = _tm.createTextField(TextManagerConstants.TYPE_STATIC, "This is body copy that would go underneath the header", "bodyCopy");			body.y = (header.y + header.height + 5);						var footer:TextField = _tm.createTextField(TextManagerConstants.TYPE_STATIC, "Copyright ME 2010", "footer");			footer.y = (body.y + body.height + 5);						var htmlTest:TextField = _tm.createTextField(TextManagerConstants.TYPE_HTML, "<span class='htmlTest1'>It's </span><br /><span class='htmlTest2'>Christmas</span>");			htmlTest.x = 100;			htmlTest.y = (footer.y + footer.height + 20);						var inputConfig:InputTextConfig = new InputTextConfig();			inputConfig.autoSize = TextFieldAutoSize.NONE;			inputConfig.width = 200;			inputConfig.height = 30;			inputConfig.background = true;			inputConfig.backgroundColor = 0x222222;						var inputTest:TextField = _tm.createTextField(TextManagerConstants.TYPE_INPUT, "Type here!", "inputTest", inputConfig);			inputTest.x = 50;			inputTest.y = (htmlTest.y + htmlTest.height + 20);						addChild(header);			addChild(body);			addChild(footer);			addChild(htmlTest);			addChild(inputTest);		}		//- PUBLIC & INTERNAL METHODS -----------------------------------------------------------------------------				//- EVENT HANDLERS ----------------------------------------------------------------------------------------			/**		 *		 */		private function handleCSSLoaded($evt:LoaderEvent):void		{			var sheet:StyleSheet = LoaderMax.getContent("textStyles");			var lang:Language = new Language();			lang.styleSheet = sheet;						_tm = TextManager.getInstance(lang);						createText();		}//- GETTERS & SETTERS -------------------------------------------------------------------------------------				//- HELPERS -----------------------------------------------------------------------------------------------			override public function toString():String		{			return getQualifiedClassName(this);		}	//- END CLASS ---------------------------------------------------------------------------------------------	}}